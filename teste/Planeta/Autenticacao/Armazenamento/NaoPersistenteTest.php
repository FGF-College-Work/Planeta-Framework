<?php
namespace Planeta\Autenticacao\Armazenamento;

/**
 * Test class for NaoPersistente.
 * Generated by PHPUnit on 2012-04-25 at 14:27:29.
 */
class NaoPersistenteTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var NaoPersistente
     */
    protected $naoPersistente;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->naoPersistente = new NaoPersistente;
    }

    /**
     * @covers Planeta\Autenticacao\Armazenamento\NaoPersistente::estaVazio
     * @covers Planeta\Autenticacao\Armazenamento\InterfaceArmazenamento
     */
    public function testEstaVazio() 
    {
        $this->assertTrue($this->naoPersistente->estaVazio());
    }

    /**
     * @covers Planeta\Autenticacao\Armazenamento\NaoPersistente::ler
     */
    public function testLerSemDados() {
        $this->assertNull($this->naoPersistente->ler());
    }
    
    /**
     * @covers Planeta\Autenticacao\Armazenamento\NaoPersistente::ler
     */
    public function testLerComDados() 
     {
        $this->naoPersistente->escrever(array('dados'));
        $this->assertTrue((bool) count($this->naoPersistente->ler()));
    }

    /**
     * @covers Planeta\Autenticacao\Armazenamento\NaoPersistente::escrever
     */
    public function testEscrever() 
    {
        $dados = array('dados');
        $this->naoPersistente->escrever($dados);
        
        $this->assertEquals($dados, $this->naoPersistente->ler());
    }

    /**
     * @covers Planeta\Autenticacao\Armazenamento\NaoPersistente::limpar
     */
    public function testLimpar() {
        $dados = array('dados');
        $this->naoPersistente->escrever($dados);
        
        $this->naoPersistente->limpar();
        
        
        $this->assertNull($this->naoPersistente->ler());
    }

}

?>
