<?php
namespace Planeta\Mvc;

/**
 * Test class for Mvc.
 * Generated by PHPUnit on 2012-04-23 at 09:18:54.
 */
class MvcTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Mvc
     */
    protected $mvc;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->mvc = new Mvc("padrao","inicial","inicial");
    }

    /**
     * @covers Planeta\Mvc\Mvc::pegarModulo
     */
    public function testPegarModulo() {
        $this->assertEquals("padrao", $this->mvc->pegarModulo());
    }

    /**
     * @covers Planeta\Mvc\Mvc::pegarControlador
     */
    public function testPegarControlador() {
        $this->assertEquals("inicial", $this->mvc->pegarControlador());
    }

    /**
     * @covers Planeta\Mvc\Mvc::pegarAcao
     * @todo Implement testPegarAcao().
     */
    public function testPegarAcao() {
        $this->assertEquals("inicial", $this->mvc->pegarAcao());
    }

    /**
     * @covers Planeta\Mvc\Mvc::criarObjetoControlador
     */
    public function testCriarObjetoControlador() {
        $controlador = $this->mvc->criarObjetoControlador();
        
        $this->assertInstanceOf("Planeta\Mvc\Controlador", $controlador);
    }
    
    /**
     * @expectedException Planeta\Mvc\Excecao\ControladorNaoExiste
     */
    public function testCriarObjetoControladorInexistente() {
        $this->mvc->definirControlador("naoExiste");
        $this->mvc->criarObjetoControlador();
    }

    /**
     * @covers Planeta\Mvc\Mvc::chamarAcao
     */
    public function testChamarAcao() {
        $controlador = $this->getMock("Padrao\Controlador\Inicial");
        
        $controlador->expects($this->once())
                    ->method("acaoInicial")
                    ->with();
        
        $this->mvc->chamarAcao($controlador);
    }
    
    /**
     * @covers Planeta\Mvc\Mvc::chamarAcao
     */
    public function testChamarAcaoComVisaoAutomatica() {
        $controlador = $this->getMock("Padrao\Controlador\Inicial");
        
        $controlador->expects($this->once())
                    ->method("acaoInicial")
                    ->with();
        
        $controlador->expects($this->once())
                    ->method("comVisaoAutomatica")
                    ->will($this->returnValue(true));
        
        $this->mvc->chamarAcao($controlador);
    }
    
    /**
     * @expectedException Planeta\Mvc\Excecao\AcaoNaoExiste
     */
    public function testChamarAcaoInexistente() {
        $controlador = $this->getMock("Padrao\Controlador\Inicial");
        $this->mvc->definirAcao("acaoNaoExiste");
        $this->mvc->chamarAcao($controlador);
    }

    /**
     * @covers Planeta\Mvc\Mvc::rodar
     */
    public function testRodar() {
        $conteudo = $this->mvc->rodar(PASTA_ACESSORIOS);
        
        $this->assertTrue((bool) $conteudo);
    }
}